{-# LANGUAGE BangPatterns, DeriveDataTypeable, DeriveGeneric, FlexibleInstances, MultiParamTypeClasses, OverloadedStrings #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module OSM.FileFormat (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/), (++), (.))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified GHC.Generics as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".Fileformat\", haskellPrefix = [], parentModule = [MName \"OSM\"], baseName = MName \"FileFormat\"}, protoFilePath = [\"OSM\",\"FileFormat.hs\"], protoSource = \"fileformat.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".Fileformat.Blob\", haskellPrefix = [], parentModule = [MName \"OSM\",MName \"FileFormat\"], baseName = MName \"Blob\"}, descFilePath = [\"OSM\",\"FileFormat\",\"Blob.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.Blob.raw\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"Blob\"], baseName' = FName \"raw\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.Blob.raw_size\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"Blob\"], baseName' = FName \"raw_size\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.Blob.zlib_data\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"Blob\"], baseName' = FName \"zlib_data\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.Blob.lzma_data\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"Blob\"], baseName' = FName \"lzma_data\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.Blob.bzip2_data\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"Blob\"], baseName' = FName \"bzip2_data\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False, jsonInstances = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".Fileformat.BlockHeader\", haskellPrefix = [], parentModule = [MName \"OSM\",MName \"FileFormat\"], baseName = MName \"BlockHeader\"}, descFilePath = [\"OSM\",\"FileFormat\",\"BlockHeader.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.BlockHeader.type\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"BlockHeader\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.BlockHeader.indexdata\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"BlockHeader\"], baseName' = FName \"indexdata\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".Fileformat.BlockHeader.datasize\", haskellPrefix' = [], parentModule' = [MName \"OSM\",MName \"FileFormat\",MName \"BlockHeader\"], baseName' = FName \"datasize\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False, jsonInstances = False}], enums = [], oneofs = [], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\224\SOH\n\DLEfileformat.proto\"_\n\EOTBlob\DC2\v\n\ETXraw\CAN\SOH \SOH(\f\DC2\DLE\n\braw_size\CAN\STX \SOH(\ENQ\DC2\DC1\n\tzlib_data\CAN\ETX \SOH(\f\DC2\DC1\n\tlzma_data\CAN\EOT \SOH(\f\DC2\DC2\n\nbzip2_data\CAN\ENQ \SOH(\f\"@\n\vBlockHeader\DC2\f\n\EOTtype\CAN\SOH \STX(\t\DC2\DC1\n\tindexdata\CAN\STX \SOH(\f\DC2\DLE\n\bdatasize\CAN\ETX \STX(\ENQB)\n\SOOSM.FileFormatH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL\184\SOH\NUL\216\SOH\NUL\248\SOH\NUL")